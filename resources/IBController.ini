# Note that in the comments in this file, TWS refers to either the Trader
# Workstation or the Gateway for the IB API.
#
# IBController may also be used to start the FIX CTCI Gateway. All settings
# relating to this have names prefixed with FIX.
#
# The IB API Gateway and the FIX CTCI Gateway share the same code. Which 
# gateway actually runs is governed by an option on the initial gateway
# login screen. The FIX setting described under IBController Startup 
# Settings below controls this.


# 1.   IBController Startup Settings
# ----------------------------------
#
# IBController logs information during operating that can be useful when
# diagnosing problems. If set to 'yes', all logging output from 
# IBController is to the console and may be directed into a file using 
# the standard > or >> command line redirection operators. If set to 'no', 
# output from IBController that is logged after it has loaded TWS appears 
# in the TWS logfile: this helps to correlate IBController log entries with
# TWS activity. The default is 'no'.

LogToConsole=no


# IBController may be used to start the IB Gateway for the FIX CTCI. This
# setting must be set to yes if the FIX CTCI gateway is to be run. The default
# is no.

FIX=no


# 2.   Authentication Settings
# ----------------------------
#
# TWS and the IB API gateway require a single username and password
# For them, you can specify the username and password as the second and
# third arguments in the command to start IBController. Alternatively 
# you may specify the username and password using the following settings:
#	IbLoginId
#	IbPassword
# If you don't specify them, you will be prompted for them in the usual 
# login dialog when TWS starts (but whatever you have specified will be 
# included in the dialog automatically: for example you may specify the
# username but not the password, and then you will be prompted for the 
# password via the login dialog).
#
#
# The FIX CTCI gateway requires one username and password for FIX order
# routing, and optionally a separate username and password for market
# data connections. You can specify the FIX username and password as the
# second and third arguments in the command to start IBController. You 
# can specify the market data username and password as the fourth and 
# fifth arguments in the command to start IBController. Alternatively
# you may specify the usernames and passwords using the following settings:
#	FIXLoginId
#	FIXPassword
#	IbLoginId	(optional)
#	IbPassword	(optional)
# If you don't specify them, you will be prompted for them in the usual 
# login dialog when FIX CTCI gateway starts (but whatever you have 
# specified will be included in the dialog automatically: for example 
# you may specify the usernames but not the passwords, and then you will 
# be prompted for the  password via the login dialog).
#
# Passwords may be specified in an 'encrypted' form. This makes
# it tricky (but by no means impossible) for someone looking at this
# file to know what your password is. Use these settings to indicate
# whether the password(s) are encrypted:
#	PasswordEncrypted
#	FIXPasswordEncrypted
# If you want to use the encrypted form, set the relevant setting to 'yes', 
# otherwise set it to 'no'. If you omit this setting, 'yes' is assumed.
#
# To get the encrypted form, edit the IBControllerEncrypt.bat file 
# and replace "aaaaa" with your password;  then run 
# IBControllerEncrypt.bat to display the encrypted version of 
# your password.
#

# IB API Settings
# ---------------

# Your TWS username:

IbLoginId=edemo


# Your TWS password (encrypted if appropriate):

IbPassword=demouser
PasswordEncrypted=no


# FIX CTCI Settings
# -----------------

# Your FIX CTCI username:

FIXLoginId=


# Your FIX CTCI password (encrypted if appropriate):

FIXPassword=
FIXPasswordEncrypted=yes




# 3.   TWS Startup Settings
# -------------------------
#
# Path to the directory where TWS should store its settings. This is 
# normally the folder in which TWS is installed. However you may set 
# it to some other location if you wish (for example if you want to
# run multiple instances of TWS with different settings).
#
# It is recommended for clarity that you use an absolute path. The 
# effect of using a relative path is undefined.
#
# Linux and OS X users should use the appropriate path syntax.
#
# Note that, for Windows users, you MUST use double separator 
# characters to separate the elements of the folder path: for
# example, IbDir=C:\\IBLiveSettings is valid, but
# IbDir=C:\IBLiveSettings is NOT valid and will give unexpected 
# results. Linux and OS X users need not use double separators,
# but they are acceptable.
#
# The default is the current working directory when IBController is
# started.

IbDir=


# If you wish to store your TWS settings on IB's servers rather
# than locally on your computer, set this to 'yes'

StoreSettingsOnServer=no


# Set to 'yes' to minimise TWS when it starts:

MinimizeMainWindow=no


# When TWS logs on it checks to see whether the account is already 
# logged in at another computer. If so it displays a dialog: this 
# setting instructs TWS how to proceed.  If set to 'primary', TWS 
# ends the existing session and continues with the new session. If 
# set to 'secondary', TWS exits so that the existing session is 
# unaffected. If set to 'manual', the user must handle the dialog. 
# Note that when set to 'primary', if another TWS session is 
# started and manually told to end the primary session, the primary
# session is automaticallyreconnected. Also note that if two 
# primary sessions are started, they will both keep reconnecting
# and disconnecting the other: therefore care needs to be exercised
# in the use of this setting. The default is 'manual'. 

ExistingSessionDetectedAction=manual


# If set to 'accept', IBController automatically accepts incoming 
# API connection dialogs. If set to 'reject', IBController
# automatically rejects incoming API connection dialogs. If 
# set to 'manual', the user must decide whether to accept or reject
# incoming API connection dialogs. The default is 'accept'.
# NB: it is recommended to set this to 'reject', and to explicitly
# configure which IP addresses can connect to the API in TWS's API
# configuration page, as this is much more secure (in this case, no
# incoming API connection dialogs will occur for those IP addresses). 

AcceptIncomingConnectionAction=accept


# If this is set to yes, IBController causes TWS to display the 
# Trades log at startup, and sets the 'All' checkbox to ensure that 
# the API reports all executions that have occurred during the past 
# week. Moreover, any attempt by the user to change any of the 
# 'Show trades' checkboxes is ignored; similarly if the user closes
# the Trades log, it is immediately re-displayed with the 'All' 
# checkbox set. If set to 'no', IBController does not interact with 
# the Trades log, and only the current session's executions are 
# returned via the API (unless the user changes the Trades log
# checkboxes). The default is no.

ShowAllTrades=no


# If ForceTwsApiPort is set to an integer, it forces IBController to
# change the TWS API Socket Port to that number shown shortly after
# startup. This setting is most commonly required if you are running
# multiple IBController instances for different accounts and would
# like different ports to be configured automatically (ie without you
# needing do this manually in the TWS window that IBController would
# open). Leaving the setting blank will make no change, so 4001 or
# 7496 would be the usual default (or whatever you manually change
# the port number to).

ForceTwsApiPort=

# This is the Read-Only API option in API->Settings 
#
# Set to yes or no (lower case):
#
#   yes       turns ON  the Read-Only API setting
#
#   no        turns OFF the Read-Only API setting
#
# Leaving the setting blank will make no change
#
ReadOnlyAPI=

# 4.   TWS Auto-Closedown
# -----------------------
#
# Set to yes or no (lower case):
#
#   yes   means allow TWS to shut down automatically at its
# 	  specified shutdown time, which is set via the TWS 
#	  configuration menu.
#
#   no    means TWS never shuts down automatically.
#
# NB: IB recommends that you do not keep TWS running 
# continuously. If you set this setting to 'no', you may 
# experience incorrect TWS operation.

IbAutoClosedown=yes



# 5.   TWS Tidy Closedown Time
# ----------------------------
#
# To tell IBController to tidily close TWS at a
# specified day of the week and time, set this value 
# to <dayOfWeek hh:mm>
# for example: 
# ClosedownAt=Friday 22:00
#
# Note that the day of the week must be specified using your
# default locale. Also note that Java will only accept 
# characters encoded to ISO 8859-1 (Latin-1). This means that
# if the day name in your default locale uses any non-Latin-1
# characters you need to encode them using Unicode escapes
# (see http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.3
# for details). For example, to tidily close TWS at 12:00 on
# Saturday where the default locale is Simplified Chinese,
# use the following:
# #ClosedownAt=\u661F\u671F\u516D 12:00

ClosedownAt=



# 6.   Other TWS Settings
# -----------------------
# 
# If you attempt to place an order for a contract for which
# you have no market data subscription, TWS displays a dialog
# to warn you against such blind trading.
#
#   yes   means the dialog is dismissed as though the user had
# 	  clicked the 'Ok' button: this means that you accept
# 	  the risk and want the order to be submitted.
#
#   no    means the dialog remains on display and must be
#         handled by the user.

AllowBlindTrading=no


# Indian versions of TWS may display a password expiry 
# notification dialog and a NSE Compliance dialog. These can be 
# dismissed by setting the following to yes. By default the 
# password expiry notice is not dismissed, but the NSE Compliance 
# notice is dismissed. 

# Warning: setting DismissPasswordExpiryWarning=yes will mean 
# you will not be notified when your password is about to expire.
# You must then take other measures to ensure that your password
# is changed within the expiry period, otherwise IBController will
# not be able to login successfully.

DismissPasswordExpiryWarning=no
DismissNSEComplianceNotice=yes


# Since TWS 906, orders placed using the BookTrader have to be confirmed
# via a dialog box (this was due to a legal dispute between IB and Trading
# Technologies who claimed IB were infringing a patent). If
# AutoConfirmOrders=yes, then when orders are placed using the BookTrader,
# the confirmation dialog is automatically handled, thereby effectively
# restoring the one-click trading. The default is 'no', requiring the user
# to manually confirm each trade.
#
# NB: this setting has been removed as the dispute has been resolved and
# TWS users now have the option to request the order confirmation dialog
# to not be displayed.
#
#AutoConfirmOrders=no


# You can tell TWS to automatically save its settings on a schedule
# of your choosing. You can specify one of more specific times,
# like this:
#
# SaveTwsSettingsAt=HH;MM [ HH:MM]... 
#
# for example:
# SaveTwsSettingsAt=08:00   12:30 17:30
# 
# Or you can specify an interval at which settings are to be saved,
# optionally starting at a specific time and continuing until another
# time, like this:
#
#SaveTwsSettingsAt=Every n [{mins | hours}] [hh:mm] [hh:mm]
#
# where the first hh:mm is the shart time and the second is the end 
# time. If you don't specify the end time, settings are saved regularly
# from the start time till midnight. If you don't specify the start time.
# settings are saved reularly all day, beginning at 00:00. Note that 
# settings will always be saved at the end time, even if that is not 
# exactly one interval later than the previous time. Examples:
#
# To save every 30 minutes all day starting at 00:00
#SaveTwsSettingsAt=Every 30
#SaveTwsSettingsAt=Every 30 mins
#
# To save every hour starting at 08:00 and ending at midnight
#SaveTwsSettingsAt=Every 1 hours 08:00
#SaveTwsSettingsAt=Every 1 hours 08:00 00:00
#
# To save every 90 minutes starting at 08:00 up to and including 17:43
#SaveTwsSettingsAt=Every 90 08:00 17:43

SaveTwsSettingsAt=



# 6.   IBController Server Settings
# ---------------------------------
#
# Do NOT CHANGE THE FOLLOWING SETTINGS unless you
# intend to issue commands to IBController (for example
# using telnet). Note that these settings have nothing to
# do with running programs that use the TWS API.

# The port that IBController listens on for commands
# such as "STOP". DO NOT set this to the port number
# used for TWS API connections. There is no good reason
# to change this setting unless the port is used by
# some other application. 

IbControllerPort=7462


# A comma separated list of ip addresses, or host names,
# which are allowed addresses for sending commands to 
# IBController.  Commands can always be sent from the
# same host as IBController is running on.

IbControlFrom=


# Specifies the IP address on which the IBController Server
# is to listen. For a multi-homed host, this can be used
# to specify that connection requests are only to be 
# accepted on the specified address. The default is to
# accept connection requests on all local addresses.

IbBindAddress=


# The specified string is output by the server when
# the connection is first opened and after the completion
# of each command. This can be useful if sending commands
# using an interactive program such as telnet. The default
# is that no prompt is output.
# For example:
#
# CommandPrompt=>

CommandPrompt=


# Some commands can return intermediate information about
# their progress. This setting controls whether such
# information is sent. The default is that such information
# is not sent.

SuppressInfoMessages=yes

